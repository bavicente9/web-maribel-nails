{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bavic\\\\Desktop\\\\dise\\xF1o web\\\\Work\\\\Maribel-Nails\\\\web-maribel-nails\\\\src\\\\Components\\\\Slider\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport './Slider.css';\nimport { useState, useEffect } from 'react'; //get all path images for the slider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPathImages = () => {\n  function importAll(r) {\n    return r.keys().map(r);\n  }\n\n  const images = importAll(require.context('./imagesSlider/', false, /\\.(png|jpe?g|svg)$/));\n  return images;\n};\n\nconst Slider = () => {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const images = getPathImages();\n  const delay = 4000; //ecach x delay change the index\n\n  useEffect(() => {\n    setTimeout(() => setIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {};\n  }, [index]); //it change the index 1 back or 1 next\n  //if the index is 0 and try to back 1 position it will return the last position\n  //if the index is the last position and try to pass to next position it will return the start position \n\n  const handleChange = direction => {\n    console.log('prevIndex', index);\n\n    if (direction === 'right') {\n      console.log('inside right');\n      setIndex(() => index === images.length - 1 ? 0 : index + 1);\n    } else if (direction === 'left' && index >= 0) {\n      console.log('inside left');\n      setIndex(() => index === 0 ? images.length - 1 : index - 1);\n    }\n\n    console.log('ActualIndex', index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rightArrow\",\n      onClick: handleChange('next')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"leftArrow\",\n      onClick: handleChange('back')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-content\",\n      style: {\n        transform: `translateX(${-index * 100}%)`\n      },\n      children: images.map(image => {\n        const source = image.default;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: source,\n          src: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Slider, \"c3fuAdVwNN91t4bNS1qBXl5hAWY=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/bavic/Desktop/diseÃ±o web/Work/Maribel-Nails/web-maribel-nails/src/Components/Slider/Slider.js"],"names":["useState","useEffect","getPathImages","importAll","r","keys","map","images","require","context","Slider","index","setIndex","delay","setTimeout","prevIndex","length","handleChange","direction","console","log","transform","image","source","default"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC,C,CAEA;;;;AACA,MAAMC,aAAa,GAAG,MAAK;AAEvB,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,WAAOA,CAAC,CAACC,IAAF,GAASC,GAAT,CAAaF,CAAb,CAAP;AAEH;;AACD,QAAMG,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACC,OAAR,CAAgB,iBAAhB,EAAmC,KAAnC,EAA0C,oBAA1C,CAAD,CAAxB;AAEA,SAAOF,MAAP;AACH,CATD;;AAYA,MAAMG,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMO,MAAM,GAAGL,aAAa,EAA5B;AACA,QAAMW,KAAK,GAAG,IAAd,CAJiB,CAOjB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU,CAAC,MAAKF,QAAQ,CAAEG,SAAD,IACnBA,SAAS,KAAKR,MAAM,CAACS,MAAP,GAAgB,CAA9B,GAAkC,CAAlC,GAAsCD,SAAS,GAAG,CADhC,CAAd,EAGRF,KAHQ,CAAV;AAKA,WAAO,MAAM,CAAE,CAAf;AACD,GAPM,EAOJ,CAACF,KAAD,CAPI,CAAT,CARiB,CAiBf;AACA;AACA;;AACF,QAAMM,YAAY,GAAIC,SAAD,IAAc;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,KAAzB;;AACA,QAAIO,SAAS,KAAK,OAAlB,EAA4B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAR,MAAAA,QAAQ,CAAC,MACLD,KAAK,KAAKJ,MAAM,CAACS,MAAP,GAAc,CAAxB,GAA4B,CAA5B,GAAgCL,KAAK,GAAC,CADlC,CAAR;AAGH,KALD,MAKO,IAAIO,SAAS,KAAK,MAAd,IAAwBP,KAAK,IAAI,CAArC,EAAuC;AAC1CQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,MAAAA,QAAQ,CAAC,MACLD,KAAK,KAAK,CAAV,GAAcJ,MAAM,CAACS,MAAP,GAAe,CAA7B,GAAiCL,KAAK,GAAC,CADnC,CAAR;AAIH;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,KAA3B;AACH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAE,YAAnB;AAAgC,MAAA,OAAO,EAAIM,YAAY,CAAC,MAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAE,WAAnB;AAA+B,MAAA,OAAO,EAAIA,YAAY,CAAC,MAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAI;AAACI,QAAAA,SAAS,EAAE,cAAa,CAACV,KAAD,GAAQ,GAAI;AAArC,OAAzC;AAAA,gBAEQJ,MAAM,CAACD,GAAP,CAAWgB,KAAK,IAAI;AAChB,cAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AACA,4BACI;AAAqB,UAAA,GAAG,EAAED,MAA1B;AAAmC,UAAA,GAAG,EAAGA;AAAzC,WAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAvDD;;GAAMb,M;;KAAAA,M;AAyDN,eAAeA,MAAf","sourcesContent":["import './Slider.css'\r\n\r\nimport { useState,useEffect } from 'react';\r\n\r\n//get all path images for the slider\r\nconst getPathImages = () =>{\r\n    \r\n    function importAll(r) {\r\n        return r.keys().map(r);\r\n    \r\n    }\r\n    const images = importAll(require.context('./imagesSlider/', false, /\\.(png|jpe?g|svg)$/));\r\n    \r\n    return images\r\n}\r\n\r\n\r\nconst Slider = () => {\r\n    const [index, setIndex] = useState(0)\r\n\r\n    const images = getPathImages();\r\n    const delay = 4000;\r\n   \r\n\r\n    //ecach x delay change the index\r\n    useEffect(() => {\r\n        setTimeout(() =>setIndex((prevIndex) =>\r\n              prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n            ),\r\n          delay\r\n        );\r\n        return () => {};\r\n      }, [index]);\r\n\r\n      //it change the index 1 back or 1 next\r\n      //if the index is 0 and try to back 1 position it will return the last position\r\n      //if the index is the last position and try to pass to next position it will return the start position \r\n    const handleChange = (direction) =>{\r\n        console.log('prevIndex', index);\r\n        if (direction === 'right' ) {\r\n            console.log('inside right');\r\n            setIndex(() => \r\n                index === images.length-1 ? 0 : index+1\r\n            )\r\n        } else if (direction === 'left' && index >= 0){\r\n            console.log('inside left');\r\n            setIndex(() => \r\n                index === 0 ? images.length -1 : index-1\r\n            )\r\n            \r\n        }\r\n        console.log('ActualIndex', index);\r\n    }\r\n\r\n    return (\r\n        <div className='slider-container'>\r\n            <button className ='rightArrow' onClick = {handleChange('next')}/>\r\n            <button className ='leftArrow' onClick = {handleChange('back')}/>\r\n\r\n            <div className='slider-content' style = {{transform:`translateX(${-index *100}%)`}}>\r\n                {\r\n                    images.map(image => {\r\n                        const source = image.default\r\n                        return (\r\n                            <img key = {source}  alt={source}  src ={source}/>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}