{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bavic\\\\Desktop\\\\dise\\xF1o web\\\\Work\\\\Maribel-Nails\\\\web-maribel-nails\\\\src\\\\Components\\\\Slider\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport './Slider.css';\nimport { useState, useEffect } from 'react'; //get all path images for the slider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPathImages = () => {\n  function importAll(r) {\n    return r.keys().map(r);\n  }\n\n  const images = importAll(require.context('./imagesSlider/', false, /\\.(png|jpe?g|svg)$/));\n  return images;\n};\n\nconst Slider = () => {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const images = getPathImages();\n  const delay = 3000;\n  useEffect(() => {\n    setTimeout(() => setIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {};\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-content\",\n      style: {\n        transform: `translateX(${-index * 100}%)`\n      },\n      children: images.map(image => {\n        const source = image.default;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: source,\n          src: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Slider, \"c3fuAdVwNN91t4bNS1qBXl5hAWY=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/bavic/Desktop/diseÃ±o web/Work/Maribel-Nails/web-maribel-nails/src/Components/Slider/Slider.js"],"names":["useState","useEffect","getPathImages","importAll","r","keys","map","images","require","context","Slider","index","setIndex","delay","setTimeout","prevIndex","length","transform","image","source","default"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC,C,CAEA;;;;AACA,MAAMC,aAAa,GAAG,MAAK;AAEvB,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,WAAOA,CAAC,CAACC,IAAF,GAASC,GAAT,CAAaF,CAAb,CAAP;AAEH;;AACD,QAAMG,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAACC,OAAR,CAAgB,iBAAhB,EAAmC,KAAnC,EAA0C,oBAA1C,CAAD,CAAxB;AAEA,SAAOF,MAAP;AACH,CATD;;AAYA,MAAMG,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMO,MAAM,GAAGL,aAAa,EAA5B;AACA,QAAMW,KAAK,GAAG,IAAd;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU,CAAC,MAAKF,QAAQ,CAAEG,SAAD,IACnBA,SAAS,KAAKR,MAAM,CAACS,MAAP,GAAgB,CAA9B,GAAkC,CAAlC,GAAsCD,SAAS,GAAG,CADhC,CAAd,EAGRF,KAHQ,CAAV;AAKA,WAAO,MAAM,CAAE,CAAf;AACD,GAPM,EAOJ,CAACF,KAAD,CAPI,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAI;AAACM,QAAAA,SAAS,EAAE,cAAa,CAACN,KAAD,GAAQ,GAAI;AAArC,OAAzC;AAAA,gBAEQJ,MAAM,CAACD,GAAP,CAAWY,KAAK,IAAI;AAChB,cAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AACA,4BACI;AAAqB,UAAA,GAAG,EAAED,MAA1B;AAAmC,UAAA,GAAG,EAAGA;AAAzC,WAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhCD;;GAAMT,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import './Slider.css'\r\n\r\nimport { useState,useEffect } from 'react';\r\n\r\n//get all path images for the slider\r\nconst getPathImages = () =>{\r\n    \r\n    function importAll(r) {\r\n        return r.keys().map(r);\r\n    \r\n    }\r\n    const images = importAll(require.context('./imagesSlider/', false, /\\.(png|jpe?g|svg)$/));\r\n    \r\n    return images\r\n}\r\n\r\n\r\nconst Slider = () => {\r\n    const [index, setIndex] = useState(0)\r\n\r\n    const images = getPathImages();\r\n    const delay = 3000;\r\n   \r\n\r\n    useEffect(() => {\r\n        setTimeout(() =>setIndex((prevIndex) =>\r\n              prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n            ),\r\n          delay\r\n        );\r\n        return () => {};\r\n      }, [index]);\r\n\r\n\r\n    return (\r\n        <div className='slider-container'>\r\n            <div className='slider-content' style = {{transform:`translateX(${-index *100}%)`}}>\r\n                {\r\n                    images.map(image => {\r\n                        const source = image.default\r\n                        return (\r\n                            <img key = {source}  alt={source}  src ={source}/>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}